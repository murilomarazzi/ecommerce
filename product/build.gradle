buildscript {
    ext {
        springBootVersion = "2.1.1.RELEASE"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: "java"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply from: "gradle/tasks/CreateMigration.gradle"
apply plugin: "checkstyle"
apply plugin: "pmd"

sourceCompatibility = 1.11

repositories {
    mavenCentral()
}

ext {
    springCloudVersion = "Finchley.SR2"
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-devtools"

    implementation "org.projectlombok:lombok"
    implementation "org.postgresql:postgresql"

    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
    implementation "org.springframework.cloud:spring-cloud-starter-sleuth"
    implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client"

    implementation "org.mapstruct:mapstruct-jdk8:1.2.0.Final"
    implementation "org.mapstruct:mapstruct-processor:1.2.0.Final"

    implementation "org.flywaydb:flyway-core"
    
    implementation "com.sun.xml.bind:jaxb-core:2.3.0.1"
    implementation "javax.xml.bind:jaxb-api:2.3.1"
    implementation "com.sun.xml.bind:jaxb-impl:2.3.1"

    testImplementation "com.h2database:h2"
    testImplementation "com.github.tomakehurst:wiremock:2.19.0"
    testImplementation "io.rest-assured:rest-assured:3.1.1"
    testImplementation "br.com.leonardoferreira:JBacon:1.2.1"
    testImplementation "com.github.javafaker:javafaker:0.16"
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "junit", module: "junit"
    }
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.3.2"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.3.2"
}

test {
    useJUnitPlatform()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

checkstyle {
    toolVersion = "8.15"
    configFile = new File("${rootDir}/../codestyle/checkstyle.xml")
}

pmd {
    toolVersion = "6.10.0"
    ruleSets = [ ]
    consoleOutput = true
    ruleSetFiles = files("${rootDir}/../codestyle/pmd-ruleset.xml")
}
